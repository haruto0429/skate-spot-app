[{"/Users/haruto/Documents/skate/skbapp/src/index.js":"1","/Users/haruto/Documents/skate/skbapp/src/App.jsx":"2","/Users/haruto/Documents/skate/skbapp/src/pages/Top.jsx":"3","/Users/haruto/Documents/skate/skbapp/src/pages/page1.jsx":"4","/Users/haruto/Documents/skate/skbapp/src/pages/Page1.jsx":"5","/Users/haruto/Documents/skate/skbapp/src/pages/Login.jsx":"6","/Users/haruto/Documents/skate/skbapp/src/config/firebase.js":"7","/Users/haruto/Documents/skate/skbapp/src/context/AuthContext.jsx":"8","/Users/haruto/Documents/skate/skbapp/src/component/LoggedInRoute.jsx":"9","/Users/haruto/Documents/skate/skbapp/src/pages/Share.jsx":"10","/Users/haruto/Documents/skate/skbapp/src/component/ShareText.jsx":"11","/Users/haruto/Documents/skate/skbapp/src/component/MediaCard.jsx":"12","/Users/haruto/Documents/skate/skbapp/src/pages/Signin.jsx":"13","/Users/haruto/Documents/skate/skbapp/src/component/MenuButton.jsx":"14"},{"size":144,"mtime":1607837974575,"results":"15","hashOfConfig":"16"},{"size":998,"mtime":1612537611065,"results":"17","hashOfConfig":"16"},{"size":4240,"mtime":1612685172197,"results":"18","hashOfConfig":"16"},{"size":29,"mtime":1609045222674,"results":"19","hashOfConfig":"20"},{"size":6480,"mtime":1612685372855,"results":"21","hashOfConfig":"16"},{"size":2419,"mtime":1612014055706,"results":"22","hashOfConfig":"16"},{"size":824,"mtime":1610863266880,"results":"23","hashOfConfig":"16"},{"size":472,"mtime":1609400137179,"results":"24","hashOfConfig":"16"},{"size":479,"mtime":1610724336392,"results":"25","hashOfConfig":"16"},{"size":182,"mtime":1610627358615,"results":"26","hashOfConfig":"16"},{"size":6583,"mtime":1612689647453,"results":"27","hashOfConfig":"16"},{"size":3269,"mtime":1612691047138,"results":"28","hashOfConfig":"16"},{"size":2873,"mtime":1612238419940,"results":"29","hashOfConfig":"16"},{"size":2526,"mtime":1612621714405,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"heh6tu",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hfx3cg",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/haruto/Documents/skate/skbapp/src/index.js",[],["61","62"],"/Users/haruto/Documents/skate/skbapp/src/App.jsx",[],"/Users/haruto/Documents/skate/skbapp/src/pages/Top.jsx",[],"/Users/haruto/Documents/skate/skbapp/src/pages/page1.jsx",["63"],"/Users/haruto/Documents/skate/skbapp/src/pages/Page1.jsx",[],"/Users/haruto/Documents/skate/skbapp/src/pages/Login.jsx",[],"/Users/haruto/Documents/skate/skbapp/src/config/firebase.js",[],"/Users/haruto/Documents/skate/skbapp/src/context/AuthContext.jsx",[],"/Users/haruto/Documents/skate/skbapp/src/component/LoggedInRoute.jsx",[],"/Users/haruto/Documents/skate/skbapp/src/pages/Share.jsx",[],"/Users/haruto/Documents/skate/skbapp/src/component/ShareText.jsx",["64"],"import { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport {TextField,} from '@material-ui/core';\nimport {useState,useEffect, useContext} from 'react'\nimport {Button} from '@material-ui/core'\nimport { storage } from \"../config/firebase\";\nimport { useHistory } from 'react-router-dom';\nimport {db} from '../config/firebase';\nimport { AuthContext } from '../context/AuthContext';\n\n\n\nconst ShareText = () => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1),\n            },\n            textAlign: 'center'\n        },\n        input: {\n            display: 'none',\n        },\n        shareForm: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        flexDirection: 'column',\n        height: '350px',\n        width: '250px',\n        margin: '0 auto',\n        [theme.breakpoints.down('sm')]:{\n            display: 'flex',\n            justifyContent: 'space-between',\n            flexDirection: 'column',\n            height: '350px',\n            width: '250px',\n            margin: '0 auto',\n            }\n        },\n        back: {\n            height: '100vh',\n        },\n        shareTitle: {\n            textAlign:'center',\n            fontFamily: 'Impact',\n            color: 'black',\n            [theme.breakpoints.down('sm')]:{\n                textAlign:'center',\n                fontFamily: 'Impact',\n                color: 'green',\n            }\n        },\n        imgResize:{\n            height: '150px',\n            width:  '150px',\n            backgroundColor: 'gray',\n            [theme.breakpoints.down('sm')]:{\n                height: '150px',\n                width:  '150px',\n                backgroundColor: 'gray',\n            }\n        \n        },\n        backButton:{\n            marginTop: '8%',\n            [theme.breakpoints.down('sm')]:{\n                marginTop: '8%',\n                height: '100%',\n                width: '100%',\n            }\n        }\n    }));\n\n    const classes = useStyles();\n\n    const [name,setName]=useState(\"\")\n    const [addres,setAddres]=useState(\"\")\n    const [explanation,setExplanation]=useState(\"\")\n    const user = useContext(AuthContext)\n    const createObjectURL = (window.URL || window.webkitURL).createObjectURL || window.createObjectURL;\n    const [file,setFile] = useState(null)\n    const [url,setUrl]=useState(null)\n    \n    \n    \n\n    useEffect(() => {\n        db.collection('posts')\n        .get()\n        .then((querySnapshot)=> {\n            console.log(\n                querySnapshot.docs.map((doc)=>({...doc.data(),id:doc.id}))\n                )\n            })\n        },[])\n        \n        \n        // 画像プレビュー\n        const handleImage = (e) =>  {\n            const url =createObjectURL(e.target.files[0]);\n            setUrl(url)\n            setFile(e.target.files[0])\n            console.log(e.target.files[0].name)\n        }\n        \n        \n        // 画像、テキストをfirestoreに格納\n        const upload = ()=>{\n            \n        const uploadTask = storage.ref(`images/${file?.name}`).put(file);\n        uploadTask.on(\n            \"state_changed\",\n            snapshot => {\n                console.log('snapshot', snapshot)\n            },\n            error => {\n                console.log(error)\n            },\n            ()=> {\n                storage\n                .ref(\"images\")\n                .child(file.name)\n                .getDownloadURL()\n                .then(url=> {\n                    console.log(url);\n                    db.collection('posts')\n                    .add({\n                        name: name,\n                        addres: addres,\n                        explanation: explanation,\n                        image: url,\n                        createAt: new Date(),\n                        username:user.displayName,\n                    })\n                    .then(() => {handleLink('./page1')\n                })\n                .catch(()=>{console.log('error')})\n                });\n            }\n        )\n    }\n\n\n    \n    \n    const history = useHistory();\n    const handleLink = path => history.goBack(path);\n    \n    \n    \n    \n    return (\n        <div className={classes.back}>\n\n        <form className={classes.shareForm} >\n            \n\n        <h1 className={classes.shareTitle}>spot share</h1>\n        <TextField  className={classes.nameFiled}\n            name='name'\n            label=\"スポット名\" \n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            />\n        <TextField className={classes.addressFiled}\n            name='address'\n            label='住所'\n            value={addres}\n            onChange={(e)=>setAddres(e.target.value)}\n            />\n        <TextField className={classes.explanationFiled}\n            name='explanation'\n            label=\"説明\"\n            multiline\n            rows={5}\n            value={explanation}\n            onChange={(e)=>setExplanation(e.target.value)}\n            />\n\n\n            <div className={classes.root}>\n                <input accept=\"image/*\"\n                    className={classes.input}\n                    id=\"icon-button-file\"\n                    type='file'\n                    onChange={handleImage}\n                    name='image'\n                    />\n                <label htmlFor=\"icon-button-file\">\n                    <IconButton\n                        color=\"primary\"\n                        aria-label=\"upload picture\"\n                        component=\"span\">\n                        <PhotoCamera />\n                    </IconButton>\n                </label>\n                    <div id='preview'>画像を追加</div>\n                    <img className={classes.imgResize}  src={url}/>\n                 \n                 <Button \n                    type='submit'\n                    onClick={()=>{\n                        upload();\n                        \n                    }}\n                    variant=\"contained\" \n                    color=\"primary\" \n                    component=\"span\"\n                    >\n                    UPLOAD\n                </Button>\n            </div>\n            \n        \n        <Button className={classes.backButton}\n        onClick={() => handleLink()}\n        variant=\"outlined\"\n        color=\"primary\"\n        >\n            投稿一覧へ\n        </Button>\n            \n        \n    </form>\n        </div>\n\n        \n    )\n}\n\nexport default ShareText","/Users/haruto/Documents/skate/skbapp/src/component/MediaCard.jsx",[],"/Users/haruto/Documents/skate/skbapp/src/pages/Signin.jsx",[],"/Users/haruto/Documents/skate/skbapp/src/component/MenuButton.jsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":2,"message":"70","line":10,"column":16,"nodeType":"71","messageId":"72","endLine":10,"endColumn":21},{"ruleId":"73","severity":1,"message":"74","line":199,"column":21,"nodeType":"75","endLine":199,"endColumn":68},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-undef","'page1' is not defined.","Identifier","undef","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]